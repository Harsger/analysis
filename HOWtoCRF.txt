# instruction for measurements and analysis of data with SM2 modules in CRF
# 
#####################################################################################
# make SM2 quadruplett ready 
# => grounding screws (small at tapared boarders and large with batch at parallel boarders)
# => compression bars (alternating orientation!) -> check for patches on cathode HV plugs
# => HV cable (banana to module) for cathodes (easier now for central ones)
# => APV-adapter-boards (to be found and returned to aluminum box in front of CRF): 
#    paper with aceton for footprints , 
#    gloves with isopropanol for zebra-connectors , 
#    afterwards duster for both surfaces
#    labeling:
#              stereo out/in     -> so/si
#              eta out/in        -> eo/ei
#              board             -> b6/b7/b8
#              side of trapezoid -> long/short
# after lifting of module on CRF :
# => connect gas and check flow on slowcontrol webpage
# => white HV distribution boxes on top of module and connect HV cables
#    layer.sector => layer 1 = stereo out
#                    layer 2 = stereo in
#                    layer 3 = eta    in
#                    layer 4 = eta    out
#                    sector left  = odd
#                           right = even
#                           ascending from short to long (side of trapezoid)
# => connect HDMI cable to APV
#    mapping file (with eta doublet) : /project/etpdaq2/SM2_data/mappings/SM2_etaDoublet_CRF.config
#    mapping file (without  doublet) : /project/etpdaq2/SM2_data/mappings/SM2_M1_CRF.config

mapfilename="/project/etpdaq2/SM2_data/mappings/SM2-M1_CRF.config"

#
#    *****************************************************************************************
#    *rule of thumb for APV cabling :                                                        *
#    *ascending from short to long side of trapezoid                                         *
#    *ascending from top (stereo_out) to bottom (eta_out) layer                              *
#    *one layer has only four numbers of APV from different FECs (e.g. stereo_out APV0,1,2,3)*
#    *****************************************************************************************
#
#    schemes for cabeling : TO-BE-ADDED (drawn on papers hanged at the upper MDT chamber of the CRF)
#
##############################################################################
# make readout ready : (as etpdaq)
# => powerCRF (alias in .bashrc) -> will start new tab in firefox with connection to network-power-supply
#    switch SRU and FECs on
# => on gar-ex-etp04atl (fast connection via sshe6->ssha4 [in .bashrc of etpdaq] ):

cdsrs       # = cd ~/etpdaqsvn/SRS_tools_trunk

./moduleConfig.sh

# gwenview window will popup with all APV pedestal data shown
# => debug APV problems with this
#
# redo this with HV on -> CAENGECO2020 (on gar-ex-etp04atl)
##############################################################################
# pedestal data taking on gar-ex-etp04atl:

cd ~/etpdaqsvn/CRFscripts

moduleNumber="09"
fileServer="3"
dataPath="/project/etpdaq"${fileServer}

#OLD ./startCRF.sh 20000000 m${moduleNumber}_raw SRU 4 CRF.config ${dataPath} standard_TDCcommonStart.MT-Online
#OLD 
#OLD #    after 2000 events in screen -r srs_dump
#OLD 
#OLD ./stopCRF.sh

runSpecifier=m${moduleNumber}_raw
./moduleMeasurement ${fileServer} ${runSpecifier} raw

cd ~/etpdaqsvn/zerosuppressor

./pedestalParse.sh ${fileServer} ${runName}.dat

#    adjust grounding if required and repeat
################################################################################
# data taking
# => check on gar-ex-etp04atl if 4 screens are active (deatched) with names
#    srs_dump , MMreadout , SRS_config , monitoring
#    -> monitoring screen with four tabs to log HV and switch on tripped channels
# => check on garsc05 ( as etpdaq shortcut "sshs5" ) if one screens is active (deatched) with name MT-Online

cd ~/etpdaqsvn/CRFscripts

moduleVoltage="580V"
runSpecifier=m${moduleNumber}_${moduleVoltage}

#OLD ./startCRF.sh 20000000 ${runSpecifier} SRU 0 CRF.config ${dataPath} standard_TDCcommonStart.MT-Online
#OLD 
#OLD # WAIT for measurement fo finish 
#OLD 
#OLD ./stopCRF

./moduleMeasurement ${fileServer} ${runSpecifier} <hours>h

# date is added by script to filename in format _YYYYMMDD_hhmm

runName=${runSpecifier}<date>

#    runName can be found in MM_data directory -> add to logfile
#    -> Nextcloud CRF/CRFlogbook.ods
#    one run should have at least 1M events (~3 hours) for the amplification scan
#    for alignment longer runs of minimal 6 hours are necessary
#    -> check in srs_dump screen if data is taken

##################################################################################
# MDT tracking and datastream merging
# => in screen on fast machine (e.g. gar-ws-etp02)
#    second screen dispatched required -> named "merging"

cd ~/etpdaqsvn/CRFscripts

./combineCRFnMM.sh ${fileServer} ${runName}

#    should produce in merged_data directory files named ${runName}_mergedAll_<number>.root

###################################################################################
# the code for the following analysis can be found online 
# git clone https://github.com/Harsger/analysis.git
# each of the following scripts need root loaded :
#                                                   mlm
# execution in the analysis directory : 
#                                                   cd /project/etpdaq4/CRF_data/nswQAQC/analysis
##################################################################################
# fitting and clustering
#    -> as etpdaq in screen on reliable machine
#       currently adding the files takes the most time (done after fitting)

./moduleFit.sh ${fileServer} ${moduleNumber} ${runName}

# => generate two files per run , one with trees , other with basic histogramms
#    if no module folder in /project/etpdaq4/CRF_data/nswQAQC is found new folder will be generated
#    module folder consists of three subfolders : 
#                                                   parameter (only textfiles with alignemnt parameter)
#                                                   fitteddata (root-files with trees of signals fits, cluster and CRF tracks)
#                                                   histogramms (root-files with evaluation , subfolder qaqc will contain database results)

#################################################################################
# alignment
#   only once for each module (each call will change the parameterfiles)
#   the analysis will run 4 times over the datasample (about 10 to 20 minutes)
#   in between several windows will pop-up wihtout need for further intervention

./moduleAlignment.sh ${moduleNumber} ${runName}_fitNclust.root

#####################################################################################
# amplification scan for database
#   for each voltage point
#                           -> 525V , 540V , 560V , 570V , 580V
#   the measurement has to be 
#                               combined ("MDT tracking and datastream merging") and 
#                               fitted ("fitting and clustering") 
#   beforehand , after this the tree-root-files are found in the fitteddata subdirectory of the module (with extension "_fitNclust.root")

./moduleProperties.sh ${moduleNumber} ${runName}_fitNclust.root

####################################################################################
# QAQC
#   as measurement choose the longest available without gas-flow or voltage drops
#   each voltage point has to be evaluated ("amplification scan for database") beforehand

./moduleQAQC.sh ${moduleNumber} ${runName}_fitNclust.root
